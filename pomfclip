#!/bin/sh

lock="/tmp/pomfclip-$DISPLAY"
exec 4>"$lock"
if flock -n 4; then
    file=""
    cleanup() {
        code=$?
        [ -n "$file" ] && rm "$file"
        rm "$lock"
        trap - EXIT INT HUP QUIT TERM
        exit $code
    }
    trap cleanup EXIT INT HUP QUIT TERM

    file=$(mktemp --tmpdir pomfXXXXXXXX.png)

    log() {
        local level
        level="$1"
        shift
        echo >&2 "$@"
        notify-send -i dialog-"$level" "Pomf!" "$*"
    }

    die() {
        log "$@" & exit 1
    }

    if command -v scrot >/dev/null 2>&1; then
        i=0
        while [ $i -lt 10 ]; do
            out=$(scrot -s "$file" 2>&1)
            # Workaround for scrot stupidness: if it fails because the pointer is "temporarily unavailable", sleep then retry
            [ $? = 0 ] && break || case "$out" in
                *"Resource temporarily unavailable"*) sleep 0.1;;
                *) break;;
            esac
            i=$((i+1))
        done
    elif command -v gnome-screenshot >/dev/null 2>&1; then
        gnome-screenshot -a -f "$file"
    else
        die error "No screenshot software?"
    fi

    [ $? != 0 -a $? != 2 ] && die error "Failed to take a screenshot"
    [ ! -s "$file" ] && die warning "Did not take a screenshot"

    optipng -o9 "$file"

    url=$(pomfload "$file") || die warning "Failed to upload screenshot"

    echo "$url"

    if
        printf %s "$url" | xclip -i -sel clipboard -silent
        printf %s "$url" | xclip -i -sel primary -silent
    then
        log information "Uploaded screenshot at $url! The URL is in your clipboard."
    else
        log information "Uploaded screenshot at $url!"
    fi
fi
